Parameters:
  appName:
    Type: String

  bucketName:
    Type: String

  targetBucketName:
    Type: AWS::SSM::Parameter::Value<String>
    Default: rusuden-targetBucketName

  trelloKey:
    Type: AWS::SSM::Parameter::Value<String>
    Default: trelloKey

  trelloToken:
    Type: AWS::SSM::Parameter::Value<String>
    Default: trelloToken

  trelloIdListReady:
    Type: AWS::SSM::Parameter::Value<String>
    Default: trelloIdListReady

  trelloApiEndpoint:
    Type: AWS::SSM::Parameter::Value<String>
    Default: trelloApiEndpoint

Resources:
  Role00:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${appName}-aws-role-00
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole

  Policy00:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${appName}-aws-policy-00
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - 
            Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: '*'
          - 
            Effect: Allow
            Action:
              - s3:GetObject
              - s3:PutObject
            Resource: !Sub arn:aws:s3:::${targetBucketName}/*
          - 
            Effect: Allow
            Action:
              - transcribe:*
            Resource: '*'
      Roles:
        - !Ref Role00

  LogGroup00:
    Type: AWS::Logs::LogGroup
    Properties: 
      LogGroupName: !Sub /aws/lambda/${Function00}

  Function00:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${appName}-aws-function-00
      Code:
        S3Bucket: !Ref bucketName
        S3Key: function00.zip
      Role: !GetAtt Role00.Arn
      Runtime: python3.7
      Handler: lambda_function.lambda_handler
      MemorySize: 128
      Timeout: 180
      Environment:
        Variables:
          TRELLO_KEY: !Ref trelloKey
          TRELLO_TOKEN: !Ref trelloToken
          TRELLO_IDLIST_READY: !Ref trelloIdListReady
          TRELLO_API_ENDPOINT: !Ref trelloApiEndpoint

  Bucket00:
    Type: AWS::S3::Bucket
    DependsOn:
      - LambdaPermission00
    Properties:
      BucketName: !Ref targetBucketName
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:Put
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: mailraw/
            Function: !GetAtt Function00.Arn

  LambdaPermission00:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref Function00
      SourceAccount: !Ref AWS::AccountId
      Principal: s3.amazonaws.com
      SourceArn: !Sub arn:aws:s3:::${targetBucketName}

  BucketPolicy00:
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: !Ref targetBucketName
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Sid: AllowSESPuts
            Principal:
              Service:
                - ses.amazonaws.com
            Action:
              - s3:PutObject
            Resource: !Sub arn:aws:s3:::${Bucket00}/*
            Condition:
              StringEquals:
                aws:Referer: !Sub ${AWS::AccountId}
